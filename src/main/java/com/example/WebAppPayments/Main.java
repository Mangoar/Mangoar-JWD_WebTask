package com.example.WebAppPayments;

import com.example.WebAppPayments.connection.ConnectionPool;
import com.example.WebAppPayments.connection.ConnectionProvider;
import com.example.WebAppPayments.exception.ConnectionPoolException;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import org.apache.log4j.Logger;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.URISyntaxException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.stream.Stream;

public class Main {

    private static final Logger logger = Logger.getLogger(Main.class);

    private static Font bigFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);

    public static void main(String[] args) throws ConnectionPoolException, IOException, DocumentException, URISyntaxException {

        File myFile = new File("./src/main/resources/iTextTable.pdf");
        if (myFile.delete()) {
            System.out.println("Deleted the file: " + myFile.getName());
        } else {
            System.out.println("Failed to delete the file.");
        }

        try {

            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream("src/main/webapp/temp_docs/iTextTable.pdf"));

            document.open();

            PdfPTable table = new PdfPTable(5);
            addTitlePage(document);
            addTableHeader(table);
            addRows(table);

            document.add(table);
            document.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static void addTitlePage(Document document)
            throws DocumentException {
        Paragraph preface = new Paragraph();
        // We add one empty line
        // Lets write a big header
        preface.add(new Paragraph("Payment report of current year:", bigFont));

        SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
        // Will create: Report generated by: _name, _date
        preface.add(new Paragraph("Date of report generation: "+ formatter.format(new Date()),smallFont));

        preface.add(new Paragraph(" "));

        document.add(preface);
    }

    private static void addTableHeader(PdfPTable table) {
        Stream.of("Card Number", "Payment date","Operation type", "Sum" ,"Destination")
                .forEach(columnTitle -> {
                    PdfPCell header = new PdfPCell();
                    header.setBackgroundColor(BaseColor.LIGHT_GRAY);
                    header.setBorderWidth(2);
                    header.setPhrase(new Phrase(columnTitle));
                    table.addCell(header);
                });
    }

    private static void addRows(PdfPTable table) {
        table.addCell("row 1, col 1");
        table.addCell("row 1, col 2");
        table.addCell("row 1, col 3");
        table.addCell("row 1, col 4");
        table.addCell("row 1, col 5");
    }

}